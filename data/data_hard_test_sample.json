[
    {
        "text": "Create a stored procedure in PLpgSQL that declares a cursor to select all records from the Settlements table where the Claim_ID column is not equivalent para_Claim_ID. Iterate over these records using a loop and update the Amount_Settled column to para_Amount_Settled adds 100 for the current row in each iteration.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_Claim_ID integer, para_Amount_Settled integer) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"Settlements\" WHERE \"Claim_ID\" <> para_Claim_ID; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"Settlements\" SET \"Amount_Settled\" = para_Amount_Settled + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(801, 1042);",
            "call sp(569, 1516);",
            "call sp(843, 1805);",
            "call sp(486, 930);",
            "call sp(801, 1676);"
        ],
        "database": "insurance_policies",
        "table": [
            "Settlements"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "Claims",
                    "table_comment": "",
                    "column_names": [
                        "Claim_ID",
                        "Policy_ID",
                        "integer_Claim_Made",
                        "integer_Claim_Settled",
                        "Amount_Claimed",
                        "Amount_Settled"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            935,
                            965
                        ],
                        [
                            744,
                            744
                        ],
                        [
                            "2016-12-18",
                            "2018-07-15"
                        ],
                        [
                            "2018-01-21",
                            "2018-01-11"
                        ],
                        [
                            41078,
                            69696
                        ],
                        [
                            1050,
                            930
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Customer_Policies",
                    "table_comment": "",
                    "column_names": [
                        "Policy_ID",
                        "Customer_ID",
                        "Policy_Type_Code",
                        "Start_integer",
                        "End_integer"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            352,
                            218
                        ],
                        [
                            2,
                            13
                        ],
                        [
                            "Car",
                            "Travel"
                        ],
                        [
                            "2016-12-25",
                            "2018-06-16"
                        ],
                        [
                            "2017-09-29",
                            "2017-12-14"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Customers",
                    "table_comment": "",
                    "column_names": [
                        "Customer_ID",
                        "Customer_Details"
                    ],
                    "column_types": [
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            3,
                            10
                        ],
                        [
                            "Sydnie Friesen",
                            "Mrs. Lilly Graham III"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Payments",
                    "table_comment": "",
                    "column_names": [
                        "Payment_ID",
                        "Settlement_ID",
                        "Payment_Method_Code",
                        "integer_Payment_Made",
                        "Amount_Payment"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            542,
                            779
                        ],
                        [
                            527,
                            476
                        ],
                        [
                            "MasterCard",
                            "MasterCard"
                        ],
                        [
                            "2017-05-28",
                            "2017-10-07"
                        ],
                        [
                            319142,
                            235893
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Settlements",
                    "table_comment": "",
                    "column_names": [
                        "Settlement_ID",
                        "Claim_ID",
                        "integer_Claim_Made",
                        "integer_Claim_Settled",
                        "Amount_Claimed",
                        "Amount_Settled",
                        "Customer_Policy_ID"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            516,
                            564
                        ],
                        [
                            761,
                            801
                        ],
                        [
                            "2016-07-19",
                            "2017-03-29"
                        ],
                        [
                            "2017-11-30",
                            "2018-02-20"
                        ],
                        [
                            82506,
                            30954
                        ],
                        [
                            1262,
                            1427
                        ],
                        [
                            359,
                            133
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            0,
            0,
            0,
            1
        ],
        "column_labels": [
            [
                1,
                0,
                0,
                0,
                0,
                1
            ],
            [
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                1,
                0,
                0,
                0,
                1,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ <> _; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Write a PLpgSQL stored procedure that declares a ref_cursor to select all records from the enzyme table where the id column is greater than para_id. Then, delete the records in the enzyme table where id is greater than para_id and OMIM is less than or equal to para_OMIM. Open the ref_cursor and for each record fetched, update the Product column to para_Product and the Location column to para_Location in the current record referred by the ref_cursor. Finally, close the ref_cursor.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_id integer, para_OMIM integer, para_Product text, para_Location text) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"enzyme\" WHERE \"id\" > para_id; rec RECORD; BEGIN DELETE FROM \"enzyme\" WHERE \"id\" > para_id AND \"OMIM\" <= para_OMIM; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"enzyme\" SET \"Product\" = para_Product, \"Location\" = para_Location WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(1, 177000, 'Protoporphyrinogen IX', 'Cytosol');",
            "call sp(2, 177000, 'Porphobilinogen', 'Mitochondrion');",
            "call sp(1, 121300, 'Porphobilinogen', 'Cytosol');",
            "call sp(5, 600923, 'Coproporphyrinogen III', 'Mitochondrion');",
            "call sp(5, 600923, 'δ-Aminolevulinic acid', 'Mitochondrion');"
        ],
        "database": "medicine_enzyme_interaction",
        "table": [
            "enzyme"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "enzyme",
                    "table_comment": "",
                    "column_names": [
                        "id",
                        "name",
                        "Location",
                        "Product",
                        "Chromosome",
                        "OMIM",
                        "Porphyria"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text",
                        "text",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            4,
                            6
                        ],
                        [
                            "PBG deaminase",
                            "Ferrochelatase"
                        ],
                        [
                            "Mitochondrion",
                            "Mitochondrion"
                        ],
                        [
                            "δ-Aminolevulinic acid",
                            "Protoporphyrinogen IX"
                        ],
                        [
                            "9q34",
                            "3q12"
                        ],
                        [
                            121300,
                            600923
                        ],
                        [
                            "ALA-Dehydratase deficiency",
                            "ALA-Dehydratase deficiency"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "medicine",
                    "table_comment": "",
                    "column_names": [
                        "id",
                        "name",
                        "Trade_Name",
                        "FDA_approved"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            7,
                            19
                        ],
                        [
                            "Melperone",
                            "Iloperidone"
                        ],
                        [
                            "Fanapt",
                            "Latuda"
                        ],
                        [
                            "Yes",
                            "No"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "medicine_enzyme_interaction",
                    "table_comment": "",
                    "column_names": [
                        "enzyme_id",
                        "medicine_id",
                        "interaction_type"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            5,
                            5
                        ],
                        [
                            20,
                            6
                        ],
                        [
                            "inhibitor",
                            "inhibitor"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            1,
            0,
            0
        ],
        "column_labels": [
            [
                1,
                0,
                1,
                1,
                0,
                1,
                0
            ],
            [
                1,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ > _; rec RECORD; BEGIN DELETE FROM _ WHERE _ > _ AND _ <= _; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _, _ = _ WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 1,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Create a stored procedure in PLpgSQL that declares a cursor to select all records from the weather table where the max_sea_level_pressure_inches column is not equivalent para_max_sea_level_pressure_inches. Iterate over these records using a loop and update the min_dew_point_f column to para_min_dew_point_f adds 100 for the current row in each iteration.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_max_sea_level_pressure_inches real, para_min_dew_point_f integer) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"weather\" WHERE \"max_sea_level_pressure_inches\" <> para_max_sea_level_pressure_inches; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"weather\" SET \"min_dew_point_f\" = para_min_dew_point_f + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(30.03, 53);",
            "call sp(29.86, 35);",
            "call sp(30.2, 49);",
            "call sp(30.1, 56);",
            "call sp(29.92, 54);"
        ],
        "database": "bike_1",
        "table": [
            "weather"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "station",
                    "table_comment": "",
                    "column_names": [
                        "id",
                        "name",
                        "lat",
                        "long",
                        "dock_count",
                        "city",
                        "installation_integer"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "real",
                        "real",
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            29,
                            2
                        ],
                        [
                            "San Jose City Hall",
                            "San Antonio Shopping Center"
                        ],
                        [
                            37.48422,
                            37.487617
                        ],
                        [
                            -122.07671,
                            -121.894714
                        ],
                        [
                            15,
                            15
                        ],
                        [
                            "San Jose",
                            "San Jose"
                        ],
                        [
                            "8/5/2013",
                            "8/7/2013"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "status",
                    "table_comment": "",
                    "column_names": [
                        "station_id",
                        "bikes_available",
                        "docks_available",
                        "time"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            3,
                            3
                        ],
                        [
                            12,
                            12
                        ],
                        [
                            3,
                            3
                        ],
                        [
                            "2015-06-02 12:57:02",
                            "2015-06-02 12:59:02"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "trip",
                    "table_comment": "",
                    "column_names": [
                        "id",
                        "duration",
                        "start_integer",
                        "start_station_name",
                        "start_station_id",
                        "end_integer",
                        "end_station_name",
                        "end_station_id",
                        "bike_id",
                        "subscription_type",
                        "zip_code"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "integer",
                        "text",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            900511,
                            900505
                        ],
                        [
                            841,
                            384
                        ],
                        [
                            "8/21/2015 17:09",
                            "8/21/2015 17:05"
                        ],
                        [
                            "Howard at 2nd",
                            "South Van Ness at Market"
                        ],
                        [
                            63,
                            56
                        ],
                        [
                            "8/21/2015 17:13",
                            "8/21/2015 17:14"
                        ],
                        [
                            "Market at 10th",
                            "Civic Center BART (7th at Market)"
                        ],
                        [
                            77,
                            50
                        ],
                        [
                            454,
                            16
                        ],
                        [
                            "Subscriber",
                            "Subscriber"
                        ],
                        [
                            94122,
                            94608
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "weather",
                    "table_comment": "",
                    "column_names": [
                        "integer",
                        "max_temperature_f",
                        "mean_temperature_f",
                        "min_temperature_f",
                        "max_dew_point_f",
                        "mean_dew_point_f",
                        "min_dew_point_f",
                        "max_humidity",
                        "mean_humidity",
                        "min_humidity",
                        "max_sea_level_pressure_inches",
                        "mean_sea_level_pressure_inches",
                        "min_sea_level_pressure_inches",
                        "max_visibility_miles",
                        "mean_visibility_miles",
                        "min_visibility_miles",
                        "max_wind_Speed_mph",
                        "mean_wind_speed_mph",
                        "max_gust_speed_mph",
                        "precipitation_inches",
                        "cloud_cover",
                        "events",
                        "wind_dir_degrees",
                        "zip_code"
                    ],
                    "column_types": [
                        "text",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "real",
                        "real",
                        "real",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "integer",
                        "text",
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "10/3/2013",
                            "9/18/2013"
                        ],
                        [
                            66,
                            78
                        ],
                        [
                            62,
                            67
                        ],
                        [
                            62,
                            54
                        ],
                        [
                            58,
                            55
                        ],
                        [
                            58,
                            56
                        ],
                        [
                            47,
                            38
                        ],
                        [
                            77,
                            78
                        ],
                        [
                            64,
                            36
                        ],
                        [
                            29,
                            38
                        ],
                        [
                            30.02,
                            29.86
                        ],
                        [
                            29.82,
                            30.02
                        ],
                        [
                            29.96,
                            29.77
                        ],
                        [
                            10,
                            10
                        ],
                        [
                            10,
                            10
                        ],
                        [
                            10,
                            10
                        ],
                        [
                            23,
                            35
                        ],
                        [
                            12,
                            13
                        ],
                        [
                            25,
                            30
                        ],
                        [
                            0,
                            0
                        ],
                        [
                            2,
                            1
                        ],
                        [
                            "",
                            ""
                        ],
                        [
                            297,
                            279
                        ],
                        [
                            94107,
                            94107
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            0,
            0,
            1
        ],
        "column_labels": [
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ <> _; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Create a stored procedure in PLpgSQL that first checks if a record exists in the user_profiles table where the name column equals para_name. If it exists, update the email column to para_email and the partitionid column to para_partitionid for that record. If no such record exists, insert a new record into the user_profiles table with name, email, and partitionid columns set to para_name, para_email, and para_partitionid, respectively.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_name text, para_email text, para_partitionid integer) LANGUAGE plpgsql AS $$ BEGIN IF EXISTS (SELECT 1 FROM \"user_profiles\" WHERE \"name\" = para_name) THEN UPDATE \"user_profiles\" SET \"email\" = para_email, \"partitionid\" = para_partitionid WHERE \"name\" = para_name; ELSE INSERT INTO \"user_profiles\" (\"name\", \"email\", \"partitionid\") VALUES (para_name, para_email, para_partitionid); END IF; END; $$;",
        "call": [
            "call sp('Iron Man', 'ts@superstar.com', 23);",
            "call sp('Black Widow', 'np@superstar.com', 5);",
            "call sp('Iron Man', 'ts@richest.com', 5);",
            "call sp('Susan', 'ts@richest.com', 5);",
            "call sp('Black Widow', 'bw@superhero.com', 23);"
        ],
        "database": "twitter_1",
        "table": [
            "user_profiles"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "follows",
                    "table_comment": "",
                    "column_names": [
                        "f1",
                        "f2"
                    ],
                    "column_types": [
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1,
                            7
                        ],
                        [
                            3,
                            1
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "tweets",
                    "table_comment": "",
                    "column_names": [
                        "id",
                        "uid",
                        "text",
                        "createinteger"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2,
                            6
                        ],
                        [
                            6,
                            4
                        ],
                        [
                            "I had a pretty rough time during the last couple of weeks",
                            "My company is hiring interns."
                        ],
                        [
                            "2018-03-09 20:00:14",
                            "2018-03-09 20:01:02"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "user_profiles",
                    "table_comment": "",
                    "column_names": [
                        "uid",
                        "name",
                        "email",
                        "partitionid",
                        "followers"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            4,
                            2
                        ],
                        [
                            "Iron Man",
                            "Iron Man"
                        ],
                        [
                            "Mary@yale.edu",
                            "ts@richest.com"
                        ],
                        [
                            2,
                            2
                        ],
                        [
                            6662425,
                            6662425
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            0,
            1
        ],
        "column_labels": [
            [
                0,
                0
            ],
            [
                0,
                0,
                0,
                0
            ],
            [
                0,
                1,
                1,
                1,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _) LANGUAGE plpgsql AS $$ BEGIN IF EXISTS (SELECT 1 FROM _ WHERE _ = _) THEN UPDATE _ SET _ = _, _ = _ WHERE _ = _; ELSE INSERT INTO _ (_, _, _) VALUES (_, _, _); END IF; END; $$;",
        "insert": 1,
        "update": 1,
        "delete": 0,
        "if": 1,
        "loop": 0
    },
    {
        "text": "Write a PLpgSQL stored procedure that declares a ref_cursor to select all records from the club_rank table where the Rank column is greater than para_Rank. Then, delete the records in the club_rank table where Rank is greater than para_Rank and Gold is less than or equal to para_Gold. Open the ref_cursor and for each record fetched, update the Silver column to para_Silver and the Bronze column to para_Bronze in the current record referred by the ref_cursor. Finally, close the ref_cursor.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_Rank real, para_Gold real, para_Silver real, para_Bronze real) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"club_rank\" WHERE \"Rank\" > para_Rank; rec RECORD; BEGIN DELETE FROM \"club_rank\" WHERE \"Rank\" > para_Rank AND \"Gold\" <= para_Gold; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"club_rank\" SET \"Silver\" = para_Silver, \"Bronze\" = para_Bronze WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(1.0, 7.0, 3.0, 6.0);",
            "call sp(2.0, 2.0, 2.0, 6.0);",
            "call sp(2.0, 4.0, 1.0, 6.0);",
            "call sp(4.0, 4.0, 3.0, 0.0);",
            "call sp(5.0, 8.0, 4.0, 6.0);"
        ],
        "database": "sports_competition",
        "table": [
            "club_rank"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "club",
                    "table_comment": "",
                    "column_names": [
                        "Club_ID",
                        "name",
                        "Region",
                        "Start_year"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            3,
                            2
                        ],
                        [
                            "AIB",
                            "HSBIF"
                        ],
                        [
                            "England",
                            "USA"
                        ],
                        [
                            "1998",
                            "2009"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "club_rank",
                    "table_comment": "",
                    "column_names": [
                        "Rank",
                        "Club_ID",
                        "Gold",
                        "Silver",
                        "Bronze",
                        "Total"
                    ],
                    "column_types": [
                        "real",
                        "integer",
                        "real",
                        "real",
                        "real",
                        "real"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2.0,
                            4.0
                        ],
                        [
                            5,
                            3
                        ],
                        [
                            3.0,
                            8.0
                        ],
                        [
                            7.0,
                            3.0
                        ],
                        [
                            2.0,
                            0.0
                        ],
                        [
                            13.0,
                            13.0
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "competition",
                    "table_comment": "",
                    "column_names": [
                        "Competition_ID",
                        "Year",
                        "Competition_type",
                        "Country"
                    ],
                    "column_types": [
                        "integer",
                        "real",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            6,
                            10
                        ],
                        [
                            2007.0,
                            2007.0
                        ],
                        [
                            "Friendly",
                            "Friendly"
                        ],
                        [
                            "Slovenia",
                            "Italy"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "competition_result",
                    "table_comment": "",
                    "column_names": [
                        "Competition_ID",
                        "Club_ID_1",
                        "Club_ID_2",
                        "Score"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            25,
                            16
                        ],
                        [
                            1,
                            1
                        ],
                        [
                            2,
                            2
                        ],
                        [
                            "10:11",
                            "11:10"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "player",
                    "table_comment": "",
                    "column_names": [
                        "Player_ID",
                        "name",
                        "Position",
                        "Club_ID",
                        "Apps",
                        "Tries",
                        "Goals",
                        "Points"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "real",
                        "real",
                        "text",
                        "real"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            12,
                            13
                        ],
                        [
                            "Matt Cook",
                            "Andy Lynch"
                        ],
                        [
                            "Loose Forward",
                            "Full Back"
                        ],
                        [
                            1,
                            1
                        ],
                        [
                            10.0,
                            23.0
                        ],
                        [
                            5.0,
                            9.0
                        ],
                        [
                            "0",
                            "0"
                        ],
                        [
                            20.0,
                            32.0
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            1,
            0,
            0,
            0
        ],
        "column_labels": [
            [
                0,
                0,
                0,
                0
            ],
            [
                1,
                0,
                1,
                1,
                1,
                0
            ],
            [
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ > _; rec RECORD; BEGIN DELETE FROM _ WHERE _ > _ AND _ <= _; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _, _ = _ WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 1,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Create a PLpgSQL stored procedure that performs the following operations: First, update the From column in the train table to have the value para_From for all rows where the Railway_ID is less than or equal to para_Railway_ID. Then, if para_Railway_ID is greater than 10, update the From column again in the train table to have the value para_Railway_ID for all rows where the Railway_ID equals para_From. Finally, update the Name, Age, Level, and Country columns in the manager table to have the values para_Name, para_Age, para_Level, and para_Country, respectively.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_From text, para_Railway_ID integer, para_Name text, para_Age integer, para_Level integer, para_Country text) LANGUAGE plpgsql AS $$ BEGIN UPDATE \"train\" SET \"From\" = para_From WHERE \"Railway_ID\" <= para_Railway_ID; IF para_Railway_ID > 10 THEN UPDATE \"train\" SET \"From\" = para_Railway_ID WHERE \"Railway_ID\" = para_From; END IF; UPDATE \"manager\" SET \"Name\" = para_Name, \"Age\" = para_Age, \"Level\" = para_Level, \"Country\" = para_Country; END; $$;",
        "call": [
            "call sp('Kazipet', 5, 'Ben Curtis', 51, 5, 'England');",
            "call sp('Mumbai CST', 3, 'David Duval', 47, 5, 'United States');",
            "call sp('Mumbai CST', 1, 'Sandy Lyle', 48, 8, 'Australia');",
            "call sp('Ballarshah', 1, 'David Duval', 55, 7, 'United States');",
            "call sp('Jammu Tawi', 2, 'Greg Norman', 48, 5, 'Australia');"
        ],
        "database": "railway",
        "table": [
            "train",
            "manager"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "manager",
                    "table_comment": "",
                    "column_names": [
                        "Manager_ID",
                        "Name",
                        "Country",
                        "Working_year_starts",
                        "Age",
                        "Level"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text",
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1,
                            3
                        ],
                        [
                            "Tiger Woods",
                            "David Duval"
                        ],
                        [
                            "United States",
                            "Scotland"
                        ],
                        [
                            "2003",
                            "1993"
                        ],
                        [
                            45,
                            51
                        ],
                        [
                            5,
                            8
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "railway",
                    "table_comment": "",
                    "column_names": [
                        "Railway_ID",
                        "Railway",
                        "Builder",
                        "Built",
                        "Wheels",
                        "Location",
                        "ObjectNumber"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            9,
                            6
                        ],
                        [
                            "GERSt",
                            "GWRWk"
                        ],
                        [
                            "Stephenson",
                            "Avonside"
                        ],
                        [
                            "1902",
                            "1902 Midland Railway 1000 was rebuilt in 1914."
                        ],
                        [
                            "0-6-0",
                            "0-6-0T"
                        ],
                        [
                            "Shildon",
                            "Swindon"
                        ],
                        [
                            "1975-7003",
                            "1975-7003"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "railway_manage",
                    "table_comment": "",
                    "column_names": [
                        "Railway_ID",
                        "Manager_ID",
                        "From_Year"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2,
                            2
                        ],
                        [
                            4,
                            4
                        ],
                        [
                            "2012",
                            "2011"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "train",
                    "table_comment": "",
                    "column_names": [
                        "Train_ID",
                        "Train_Num",
                        "Name",
                        "From",
                        "Arrival",
                        "Railway_ID"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "text",
                        "text",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            4,
                            7
                        ],
                        [
                            "12139",
                            "11401"
                        ],
                        [
                            "Nandigram Exp",
                            "Andaman Exp"
                        ],
                        [
                            "Wardha",
                            "Nagpur"
                        ],
                        [
                            "13:04",
                            "09:48"
                        ],
                        [
                            5,
                            5
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            1,
            0,
            0,
            1
        ],
        "column_labels": [
            [
                0,
                1,
                1,
                0,
                1,
                1
            ],
            [
                1,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                1,
                0,
                0
            ],
            [
                0,
                0,
                1,
                1,
                0,
                1
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _, _ _, _ _, _ _) LANGUAGE plpgsql AS $$ BEGIN UPDATE _ SET _ = _ WHERE _ <= _; IF _ > 10 THEN UPDATE _ SET _ = _ WHERE _ = _; END IF; UPDATE _ SET _ = _, _ = _, _ = _, _ = _; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 1,
        "loop": 0
    },
    {
        "text": "Create a stored procedure in PLpgSQL that declares a cursor to select all records from the market table where the Num_of_employees column is not equivalent para_Num_of_employees. Iterate over these records using a loop and update the Ranking column to para_Ranking adds 100 for the current row in each iteration.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_Num_of_employees integer, para_Ranking integer) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"market\" WHERE \"Num_of_employees\" <> para_Num_of_employees; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"market\" SET \"Ranking\" = para_Ranking + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(1958, 21);",
            "call sp(1966, 4);",
            "call sp(1958, 8);",
            "call sp(1958, 3);",
            "call sp(1958, 4);"
        ],
        "database": "phone_market",
        "table": [
            "market"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "market",
                    "table_comment": "",
                    "column_names": [
                        "Market_ID",
                        "District",
                        "Num_of_employees",
                        "Num_of_shops",
                        "Ranking"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "integer",
                        "real",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1,
                            2
                        ],
                        [
                            "Quebec",
                            "British Columbia"
                        ],
                        [
                            1968,
                            1958
                        ],
                        [
                            40.0,
                            10.0
                        ],
                        [
                            5,
                            4
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "phone",
                    "table_comment": "",
                    "column_names": [
                        "Name",
                        "Phone_ID",
                        "Memory_in_G",
                        "Carrier",
                        "Price"
                    ],
                    "column_types": [
                        "text",
                        "integer",
                        "integer",
                        "text",
                        "real"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "IPhone X",
                            "IPhone 6"
                        ],
                        [
                            5,
                            5
                        ],
                        [
                            16,
                            128
                        ],
                        [
                            "TMobile",
                            "Sprint"
                        ],
                        [
                            3139.0,
                            3440.0
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "phone_market",
                    "table_comment": "",
                    "column_names": [
                        "Market_ID",
                        "Phone_ID",
                        "Num_of_stock"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            6,
                            2
                        ],
                        [
                            "1",
                            "1"
                        ],
                        [
                            874,
                            2232
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            1,
            0,
            0
        ],
        "column_labels": [
            [
                0,
                0,
                1,
                0,
                1
            ],
            [
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ <> _; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ + 100 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Create a stored procedure in PLpgSQL to update Name in roller_coaster to para_Name for each record where Opened is greater than para_Opened and Roller_Coaster_ID is less to para_Roller_Coaster_ID.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_Opened text, para_Name text, para_Roller_Coaster_ID integer) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM roller_coaster WHERE \"Opened\" > para_Opened AND \"Roller_Coaster_ID\" < para_Roller_Coaster_ID; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"roller_coaster\" SET \"Name\" = para_Name WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp('2012', 'Dauling Dragon', 2);",
            "call sp('May 14, 2005', 'Ravine Flyer II', 1);",
            "call sp('May 14, 2005', 'Hades 360', 3);",
            "call sp('2012', 'Ravine Flyer II', 5);",
            "call sp('2012', 'Twister', 4);"
        ],
        "database": "roller_coaster",
        "table": [
            "roller_coaster"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "country",
                    "table_comment": "",
                    "column_names": [
                        "Country_ID",
                        "Name",
                        "Population",
                        "Area",
                        "Languages"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            3,
                            2
                        ],
                        [
                            "Sweden",
                            "Sweden"
                        ],
                        [
                            8206524,
                            8206524
                        ],
                        [
                            338145,
                            449964
                        ],
                        [
                            "German",
                            "Finnish Swedish"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "roller_coaster",
                    "table_comment": "",
                    "column_names": [
                        "Roller_Coaster_ID",
                        "Name",
                        "Park",
                        "Country_ID",
                        "Length",
                        "Height",
                        "Speed",
                        "Opened",
                        "Status"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "real",
                        "real",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2,
                            6
                        ],
                        [
                            "Twister",
                            "Twister"
                        ],
                        [
                            "Happy Valley",
                            "Mt. Olympus"
                        ],
                        [
                            1,
                            2
                        ],
                        [
                            3914.0,
                            1574.0
                        ],
                        [
                            136.0,
                            136.0
                        ],
                        [
                            "57",
                            "57"
                        ],
                        [
                            "May 14, 2005",
                            "May 14, 2005"
                        ],
                        [
                            "Operating",
                            "Operating"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            1
        ],
        "column_labels": [
            [
                0,
                1,
                0,
                0,
                0
            ],
            [
                1,
                1,
                0,
                0,
                0,
                0,
                0,
                1,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _ WHERE _ > _ AND _ < _; rec RECORD; BEGIN OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Create a PLpgSQL stored procedure named 'sp' with the parameters para_staff_id, para_project_id, and para_outcome_code. In the procedure, declare a cursor 'ref_cursor' for selecting all records from the Project_Staff table. Update the project_id column in the Project_Staff table to para_project_id + 100 for rows where project_id is less than or equal to para_project_id. Open the cursor, fetch each record into 'rec', and for each fetched row, update the project_id column to para_project_id substract 10. Continue this in a loop until all records are processed, then close the cursor. Finally, update the outcome_code column in the Project_Outcomes table to para_outcome_code.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_staff_id real, para_project_id integer, para_outcome_code text) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"Project_Staff\"; rec RECORD; BEGIN UPDATE \"Project_Staff\" SET \"project_id\" = para_project_id + 100 WHERE \"project_id\" <= para_project_id; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"Project_Staff\" SET \"project_id\" = para_project_id - 10 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; UPDATE \"Project_Outcomes\" SET \"outcome_code\" = para_outcome_code; END; $$;",
        "call": [
            "call sp(13739108.0, 8, 'Paper');",
            "call sp(45.0, 2, 'Paper');",
            "call sp(29.0, 2, 'Paper');",
            "call sp(5137097.0, 5, 'Patent');",
            "call sp(13739108.0, 2, 'Paper');"
        ],
        "database": "tracking_grants_for_research",
        "table": [
            "Project_Staff",
            "Project_Outcomes"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "Project_Outcomes",
                    "table_comment": "",
                    "column_names": [
                        "project_id",
                        "outcome_code",
                        "outcome_details"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            7,
                            9
                        ],
                        [
                            "Paper",
                            "Paper"
                        ],
                        [
                            NaN,
                            NaN
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Document_Types",
                    "table_comment": "",
                    "column_names": [
                        "document_type_code",
                        "document_description"
                    ],
                    "column_types": [
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "REG",
                            "APP"
                        ],
                        [
                            "Regular",
                            "Initial Application"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Documents",
                    "table_comment": "",
                    "column_names": [
                        "document_id",
                        "document_type_code",
                        "grant_id",
                        "sent_integer",
                        "response_received_integer",
                        "other_details"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "integer",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            13,
                            1
                        ],
                        [
                            "APP",
                            "APP"
                        ],
                        [
                            7,
                            10
                        ],
                        [
                            "2003-08-29 03:32:52",
                            "2004-01-23 11:57:08"
                        ],
                        [
                            "1979-12-08 10:38:07",
                            "1980-02-24 15:23:44"
                        ],
                        [
                            "",
                            ""
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Grants",
                    "table_comment": "",
                    "column_names": [
                        "grant_id",
                        "organisation_id",
                        "grant_amount",
                        "grant_start_integer",
                        "grant_end_integer",
                        "other_details"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "numeric",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            10,
                            4
                        ],
                        [
                            8,
                            11
                        ],
                        [
                            4515947.7015,
                            4094.542
                        ],
                        [
                            "1982-04-07 00:07:43",
                            "2004-12-05 19:43:13"
                        ],
                        [
                            "2007-04-24 03:04:13",
                            "1989-03-16 18:27:16"
                        ],
                        [
                            "voluptatum",
                            "explicabo"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Organisation_Types",
                    "table_comment": "",
                    "column_names": [
                        "organisation_type",
                        "organisation_type_description"
                    ],
                    "column_types": [
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "RES",
                            "RES"
                        ],
                        [
                            "Sponsor",
                            "Sponsor"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Organisations",
                    "table_comment": "",
                    "column_names": [
                        "organisation_id",
                        "organisation_type",
                        "organisation_details"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            7,
                            5
                        ],
                        [
                            "SPON",
                            "SPON"
                        ],
                        [
                            "impedit",
                            "et"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Project_Staff",
                    "table_comment": "",
                    "column_names": [
                        "staff_id",
                        "project_id",
                        "role_code",
                        "integer_from",
                        "integer_to",
                        "other_details"
                    ],
                    "column_types": [
                        "real",
                        "integer",
                        "text",
                        "text",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            6572.0,
                            29.0
                        ],
                        [
                            9,
                            2
                        ],
                        [
                            "researcher",
                            "leader"
                        ],
                        [
                            "2005-01-13 11:49:48",
                            "2004-11-01 23:52:38"
                        ],
                        [
                            "1985-05-30 22:26:30",
                            "2004-12-16 13:03:36"
                        ],
                        [
                            NaN,
                            NaN
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Research_Outcomes",
                    "table_comment": "",
                    "column_names": [
                        "outcome_code",
                        "outcome_description"
                    ],
                    "column_types": [
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "Paper",
                            "Paper"
                        ],
                        [
                            "Published Research Paper",
                            "Published Research Paper"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Projects",
                    "table_comment": "",
                    "column_names": [
                        "project_id",
                        "organisation_id",
                        "project_details"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            4,
                            4
                        ],
                        [
                            3,
                            3
                        ],
                        [
                            "sed",
                            "consectetur"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Research_Staff",
                    "table_comment": "",
                    "column_names": [
                        "staff_id",
                        "employer_organisation_id",
                        "staff_details"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            3,
                            10
                        ],
                        [
                            2,
                            10
                        ],
                        [
                            "dicta",
                            "animi"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Staff_Roles",
                    "table_comment": "",
                    "column_names": [
                        "role_code",
                        "role_description"
                    ],
                    "column_types": [
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            "leader",
                            "leader"
                        ],
                        [
                            "Project Leader",
                            "Project Leader"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Tasks",
                    "table_comment": "",
                    "column_names": [
                        "task_id",
                        "project_id",
                        "task_details",
                        "eg Agree Objectives"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            10,
                            2
                        ],
                        [
                            3,
                            1
                        ],
                        [
                            "c",
                            "i"
                        ],
                        [
                            NaN,
                            NaN
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0
        ],
        "column_labels": [
            [
                1,
                1,
                0
            ],
            [
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0,
                0,
                0,
                0
            ],
            [
                0,
                0
            ],
            [
                0,
                0,
                0
            ],
            [
                1,
                1,
                0,
                0,
                0,
                0
            ],
            [
                1,
                0
            ],
            [
                1,
                0,
                0
            ],
            [
                1,
                0,
                0
            ],
            [
                0,
                0
            ],
            [
                0,
                1,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _; rec RECORD; BEGIN UPDATE _ SET _ = _ + 100 WHERE _ <= _; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ - 10 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; UPDATE _ SET _ = _; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    },
    {
        "text": "Write a PLpgSQL stored procedure that first updates the StuID column in the Student table to its current value for rows where the Age is not equal to para_Age + 2. Then, using a cursor loop through all rows in the Student, and update the Advisor column to para_Advisor - 2 for each row found by the cursor.",
        "plsql": "CREATE OR REPLACE PROCEDURE sp(para_StuID integer, para_Age integer, para_Advisor integer) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM \"Student\"; rec RECORD; BEGIN UPDATE \"Student\" SET \"StuID\" = \"StuID\" WHERE \"Age\" <> para_Age + 2; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE \"Student\" SET \"Advisor\" = para_Advisor - 2 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "call": [
            "call sp(1018, 20, 8423);",
            "call sp(1005, 18, 2192);",
            "call sp(1015, 20, 1148);",
            "call sp(1011, 27, 7723);",
            "call sp(1020, 21, 2192);"
        ],
        "database": "restaurant_1",
        "table": [
            "Student"
        ],
        "schema": {
            "schema_items": [
                {
                    "table_name": "Restaurant",
                    "table_comment": "",
                    "column_names": [
                        "ResID",
                        "ResName",
                        "Address",
                        "Rating"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2,
                            2
                        ],
                        [
                            "Honeygrow",
                            "Honeygrow"
                        ],
                        [
                            "3212 St Paul St, Baltimore, MD 21218",
                            "3212 St Paul St, Baltimore, MD 21218"
                        ],
                        [
                            4,
                            4
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Restaurant_Type",
                    "table_comment": "",
                    "column_names": [
                        "ResTypeID",
                        "ResTypeName",
                        "ResTypeDescription"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            2,
                            1
                        ],
                        [
                            "Sandwich",
                            "Stir-fry"
                        ],
                        [
                            "Simplest there is.",
                            "Classic Chinese cooking."
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Student",
                    "table_comment": "",
                    "column_names": [
                        "StuID",
                        "LName",
                        "Fname",
                        "Age",
                        "Sex",
                        "Major",
                        "Advisor",
                        "city_code"
                    ],
                    "column_types": [
                        "integer",
                        "text",
                        "text",
                        "integer",
                        "text",
                        "integer",
                        "integer",
                        "text"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1005,
                            1010
                        ],
                        [
                            "Andreou",
                            "Gompers"
                        ],
                        [
                            "Arthur",
                            "Shiela"
                        ],
                        [
                            26,
                            17
                        ],
                        [
                            "M",
                            "F"
                        ],
                        [
                            600,
                            600
                        ],
                        [
                            7792,
                            2192
                        ],
                        [
                            "CHI",
                            "NYC"
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0
                    ]
                },
                {
                    "table_name": "Type_Of_Restaurant",
                    "table_comment": "",
                    "column_names": [
                        "ResID",
                        "ResTypeID"
                    ],
                    "column_types": [
                        "integer",
                        "integer"
                    ],
                    "column_comments": [
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1,
                            1
                        ],
                        [
                            1,
                            1
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0
                    ]
                },
                {
                    "table_name": "Visits_Restaurant",
                    "table_comment": "",
                    "column_names": [
                        "StuID",
                        "ResID",
                        "Time",
                        "Spent"
                    ],
                    "column_types": [
                        "integer",
                        "integer",
                        "timestamp without time zone",
                        "real"
                    ],
                    "column_comments": [
                        "",
                        "",
                        "",
                        ""
                    ],
                    "column_contents": [
                        [
                            1001,
                            1001
                        ],
                        [
                            1,
                            1
                        ],
                        [
                            "2017-10-09T18:15:00",
                            "2017-10-09T18:15:00"
                        ],
                        [
                            6.53,
                            6.53
                        ]
                    ],
                    "pk_indicators": [
                        1,
                        0,
                        0,
                        0
                    ]
                }
            ],
            "foreign_keys": []
        },
        "evidence": "",
        "table_labels": [
            0,
            0,
            1,
            0,
            0
        ],
        "column_labels": [
            [
                0,
                0,
                0,
                0
            ],
            [
                0,
                0,
                0
            ],
            [
                1,
                0,
                0,
                1,
                0,
                0,
                1,
                0
            ],
            [
                0,
                0
            ],
            [
                1,
                0,
                0,
                0
            ]
        ],
        "matched_contents": {},
        "skeleton": "CREATE OR REPLACE PROCEDURE sp(_ _, _ _, _ _) LANGUAGE plpgsql AS $$ DECLARE ref_cursor CURSOR FOR SELECT * FROM _; rec RECORD; BEGIN UPDATE _ SET _ = _ WHERE _ <> _ + 2; OPEN ref_cursor; LOOP FETCH ref_cursor INTO rec; EXIT WHEN NOT FOUND; UPDATE _ SET _ = _ - 2 WHERE CURRENT OF ref_cursor; END LOOP; CLOSE ref_cursor; END; $$;",
        "insert": 0,
        "update": 1,
        "delete": 0,
        "if": 0,
        "loop": 1
    }
]